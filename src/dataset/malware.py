import os

from torch.utils.data import DataLoader
from torchvision import transforms
from torchvision.datasets import ImageFolder


transform = transforms.Compose(
    [transforms.Grayscale(num_output_channels=1), transforms.ToTensor(), transforms.Normalize((0.5), (0.5))]
)
transform_test = transforms.Compose(
    [transforms.Grayscale(num_output_channels=1), transforms.ToTensor(), transforms.Normalize((0.5), (0.5))]
)


def get_malware_dataloaders(root, num_tasks, batch_size):
    train_dataloaders = []
    test_dataloaders = []

    for task in range(num_tasks):
        task_root = os.path.join(root, f"task_{task}", "train")
        trainset = ImageFolder(root=task_root, transform=transform)
        trainloader = DataLoader(trainset, batch_size=batch_size, shuffle=True)

        task_root = os.path.join(root, f"task_{task}", "test")
        trainset = ImageFolder(root=task_root, transform=transform_test)
        testloader = DataLoader(trainset, batch_size=batch_size, shuffle=False)

        train_dataloaders.append(trainloader)
        test_dataloaders.append(testloader)

    return train_dataloaders, test_dataloaders
